version: '3.6'
services:
    elasticsearch:
        image: elasticsearch:6.7.0
        ports:
            - 9200:9200

    redis:
        hostname: redis
        image: redis:latest
        ports:
            - 63791:6379

    db:
        image: postgres
        environment:
            POSTGRES_PASSWORD: ${POSTGRESQL_PW}
            POSTGRES_USER: concordia
            POSTGRES_MULTIPLE_DATABASES: test_concordia
        ports:
            - 54323:5432
        volumes:
            - ./postgresql:/docker-entrypoint-initdb.d
            - db_volume:/var/lib/postgresl/data/

    app:
        build: .
        environment: &django-environment
            WAIT_HOSTS: db:5432, redis:6379
            POSTGRESQL_HOST: db
            POSTGRESQL_PW: ${POSTGRESQL_PW}
            CONCORDIA_ENVIRONMENT: development
            S3_BUCKET_NAME: crowd-dev-content
            DJANGO_SETTINGS_MODULE: concordia.settings_docker
            DEBUG: ${DEBUG:-}
            REDIS_ADDRESS: redis
            REDIS_PORT: 6379
        depends_on:
            - redis
            - db
        volumes:
            - .:/app
            - images_volume:/concordia_images
        links:
            - redis
        ports:
            - 80:80

    importer:
        build:
            context: .
            dockerfile: importer/Dockerfile
        environment: *django-environment
        depends_on:
            - redis
            - db
        links:
            - redis
            - db
        volumes:
            - images_volume:/concordia_images

    indexer:
        build:
            context: .
            dockerfile: indexer/Dockerfile
        environment:
            <<: *django-environment
            WAIT_HOSTS: db:5432, redis:6379, elasticsearch:9200
            ELASTICSEARCH_ENDPOINT: http://elasticsearch:9200
        depends_on:
            - db
            - elasticsearch
        links:
            - elasticsearch

    celerybeat:
        build:
            context: .
            dockerfile: celerybeat/Dockerfile
        environment: *django-environment
        depends_on:
            - redis
            - db
        links:
            - redis

volumes:
    db_volume:
    images_volume:
